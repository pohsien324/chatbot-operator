// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"./pkg/apis/pohsienshih/v1.Bot":           schema_pkg_apis_pohsienshih_v1_Bot(ref),
		"./pkg/apis/pohsienshih/v1.BotSpec":       schema_pkg_apis_pohsienshih_v1_BotSpec(ref),
		"./pkg/apis/pohsienshih/v1.BotStatus":     schema_pkg_apis_pohsienshih_v1_BotStatus(ref),
		"./pkg/apis/pohsienshih/v1.Message":       schema_pkg_apis_pohsienshih_v1_Message(ref),
		"./pkg/apis/pohsienshih/v1.MessageSpec":   schema_pkg_apis_pohsienshih_v1_MessageSpec(ref),
		"./pkg/apis/pohsienshih/v1.MessageStatus": schema_pkg_apis_pohsienshih_v1_MessageStatus(ref),
	}
}

func schema_pkg_apis_pohsienshih_v1_Bot(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Bot is the Schema for the bots API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/pohsienshih/v1.BotSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/pohsienshih/v1.BotStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/pohsienshih/v1.BotSpec", "./pkg/apis/pohsienshih/v1.BotStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_pohsienshih_v1_BotSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BotSpec defines the desired state of Bot",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"bottype": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"group": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"channelsecret": {
						SchemaProps: spec.SchemaProps{
							Description: "For Line bot",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"channeltoken": {
						SchemaProps: spec.SchemaProps{
							Description: "For Line bot",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"verifytoken": {
						SchemaProps: spec.SchemaProps{
							Description: "For Messenger bot",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"pagetoken": {
						SchemaProps: spec.SchemaProps{
							Description: "For Messenger bot",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"telegramtoken": {
						SchemaProps: spec.SchemaProps{
							Description: "For Telegram bot",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"size": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"bottype", "group", "channelsecret", "channeltoken", "verifytoken", "pagetoken", "telegramtoken", "size"},
			},
		},
	}
}

func schema_pkg_apis_pohsienshih_v1_BotStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BotStatus defines the observed state of Bot",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_pohsienshih_v1_Message(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "Message is the Schema for the messages API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/pohsienshih/v1.MessageSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/pohsienshih/v1.MessageStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/pohsienshih/v1.MessageSpec", "./pkg/apis/pohsienshih/v1.MessageStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_pohsienshih_v1_MessageSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MessageSpec defines the desired state of Message",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"botname": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"group": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"keyword": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"response": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"botname", "group", "keyword", "response"},
			},
		},
	}
}

func schema_pkg_apis_pohsienshih_v1_MessageStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MessageStatus defines the observed state of Message",
				Type:        []string{"object"},
			},
		},
	}
}
